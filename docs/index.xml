<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JFrog Platform on Azure Workshop</title>
    <link>https://jfrogtraining.github.io/azure-aks-workshop/</link>
    <description>Recent content on JFrog Platform on Azure Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language><atom:link href="https://jfrogtraining.github.io/azure-aks-workshop/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Continuous Integration and Delivery</title>
      <link>https://jfrogtraining.github.io/azure-aks-workshop/2_devops_cloud/21_continuous_integration_and_delivery.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/azure-aks-workshop/2_devops_cloud/21_continuous_integration_and_delivery.html</guid>
      <description>Continuous integration and delivery (CI/CD) is the process for which your software components are built from code, integrated, tested, released, deployed and ultimately delivered to end-users. CI/CD pipelines are the software assembly line that orchestrates the building of your software. This CI/CD pipeline line requires infrastructure. Cloud computing has allowed this infrastructure to become dynamic and ephemeral. On cloud infrastructure, your CI/CD pipelines scale up and down to meet your software delivery demands.</description>
    </item>
    
    <item>
      <title>Binary Repository Management</title>
      <link>https://jfrogtraining.github.io/azure-aks-workshop/2_devops_cloud/22_binary_repository_management.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/azure-aks-workshop/2_devops_cloud/22_binary_repository_management.html</guid>
      <description>A Binary Repository Manager is a software hub that simplifies the development process for different teams across an organization by helping them to collaborate on building coherent and compatible software components. It does this by centralizing the management of all the binary artifacts generated and used by the organization, thereby overcoming the incredible complexity arising from diverse binary artifact types, their position in the overall workflow and the set of dependencies between them.</description>
    </item>
    
    <item>
      <title>DevSecOps</title>
      <link>https://jfrogtraining.github.io/azure-aks-workshop/2_devops_cloud/23_dev_sec_ops.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/azure-aks-workshop/2_devops_cloud/23_dev_sec_ops.html</guid>
      <description>Any security issue identified by a security scanning may be reviewed by a small security team that may lack the technical knowledge. This challenge can be reduced by shifting left to the developer and operations teams, making them also responsible for security and compliance. This moves security earlier in the software delivery process. Source code, dependency and artifact security scanning are some examples of moving security into the development process. Implementing the identification of security issues earlier in the CI/CD pipeline, as well as automating security and compliance policies in the Software Development Lifecycle (SDLC), rather than using manual processes, is crucial.</description>
    </item>
    
    <item>
      <title>JFrog Platform for DevOps in the Cloud</title>
      <link>https://jfrogtraining.github.io/azure-aks-workshop/2_devops_cloud/24_jfrog_platform_overview.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/azure-aks-workshop/2_devops_cloud/24_jfrog_platform_overview.html</guid>
      <description>The JFrog Platform is designed to meet the growing needs of companies to develop and distribute software in the cloud. It provides DevOps teams with the tools needed to create, manage, secure and deploy software with ease. These tools cover everything from continuous integration and delivery (CI/CD), binary repository management, artifact maturity, security and vulnerability protection (DevSecOps), release management, analytics and distribution.
JFrog Artifactory is an Artifact Repository Manager that fully supports software packages created by any language or technology.</description>
    </item>
    
    <item>
      <title>Set up our JFrog Pipelines Integrations</title>
      <link>https://jfrogtraining.github.io/azure-aks-workshop/5_build_deploy_app/51_pipeline_integrations.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/azure-aks-workshop/5_build_deploy_app/51_pipeline_integrations.html</guid>
      <description>Our CI/CD pipeline requires access to GitHub to pull our code, access to JFrog Artifactory to publish our Docker image and build info and access to the AKS cluster to deploy our application. We will set up JFrog Pipelines integrations to enable these.
An Integration connects Pipelines to an external service/tool. Each integration type defines the endpoint, credentials and any other configuration detail required for Pipelines to exchange information with the service.</description>
    </item>
    
    <item>
      <title>Update our Pipeline</title>
      <link>https://jfrogtraining.github.io/azure-aks-workshop/5_build_deploy_app/52_update_pipeline.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/azure-aks-workshop/5_build_deploy_app/52_update_pipeline.html</guid>
      <description>We need to make an update to our CI/CD pipeline in order to pull code from your GitHub repository and to use your personal JFrog Artifactory instance. The CI/CD pipeline is defined in pipeline.yml. This pipeline file is parameterized with a values.yml file. We need to update this file.
 In your Azure Cloud Shell, use the editor and view the pipeline.yml file. View and understand the steps. Note the parameterized values.</description>
    </item>
    
    <item>
      <title>Add our CI/CD Pipeline</title>
      <link>https://jfrogtraining.github.io/azure-aks-workshop/5_build_deploy_app/53_add_pipeline.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/azure-aks-workshop/5_build_deploy_app/53_add_pipeline.html</guid>
      <description>In your JFrog Platform instance, go to Application &amp;gt; Pipelines &amp;gt; Pipeline Sources.   Click Add a pipeline source.
  Click Add Pipeline Source at the top right and select From YAML.
  Call the security policy, High-Severity.   Click on New Rule.
  Name the rule High-Severity and select High for the Minimal Severity. Click Save.
   Click Create to create this new security policy.</description>
    </item>
    
    <item>
      <title>JFrog Azure Event: Get an Azure Environment</title>
      <link>https://jfrogtraining.github.io/azure-aks-workshop/4_workshop_setup/41_azure_setup/412_azure_event_account.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/azure-aks-workshop/4_workshop_setup/41_azure_setup/412_azure_event_account.html</guid>
      <description>Only complete this section if you are running the workshop through an JFrog Azure hosted event. If you are not at a JFrog Azure hosted event, go here.
 For an JFrog Azure hosted event, you will be provided with a registration link and an activation code. The following steps show how to use the activation code to access an Azure environment for this workshop.
 Go to the registration link in your browser.</description>
    </item>
    
    <item>
      <title>Self-paced: Create an Azure account</title>
      <link>https://jfrogtraining.github.io/azure-aks-workshop/4_workshop_setup/41_azure_setup/413_self_paced_account.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/azure-aks-workshop/4_workshop_setup/41_azure_setup/413_self_paced_account.html</guid>
      <description>Only complete this section if you are running the workshop on your own. If you are at an JFrog Azure hosted event, go here.
   If you don&amp;rsquo;t already have an Azure account, create one now by going here.
  Select Start free.
  Sign in with your Microsoft or GitHub account or create a free Microsoft account.
  On the About you page, select your correct country or region.</description>
    </item>
    
    <item>
      <title>Set up your Azure Cloud Shell</title>
      <link>https://jfrogtraining.github.io/azure-aks-workshop/4_workshop_setup/41_azure_setup/414_azure_cloud_shell.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/azure-aks-workshop/4_workshop_setup/41_azure_setup/414_azure_cloud_shell.html</guid>
      <description>Azure Cloud Shell is an interactive, authenticated, browser-accessible shell for managing Azure resources.
 In your Azure Portal, click the Azure Cloud Shell button.  You will be prompted for a shell type. Choose Bash.  If this is your first time using Azure Cloud Shell, you will be prompted to create storage to support it. Go ahead and do this by clicking Create storage with the provided subscription. It will take a few minutes to set up the storage.</description>
    </item>
    
    <item>
      <title>Create a Service Principal</title>
      <link>https://jfrogtraining.github.io/azure-aks-workshop/4_workshop_setup/41_azure_setup/415_azure_service_principal.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/azure-aks-workshop/4_workshop_setup/41_azure_setup/415_azure_service_principal.html</guid>
      <description>To deploy our application with our CI/CD pipeline, we need Azure credentials. To do this, we will create an Azure service principal.
When you have applications, hosted services, or automated tools that needs to access or modify resources, you can create an identity for the app. This identity is known as a service principal. Access to resources is restricted by the roles assigned to the service principal, giving you control over which resources can be accessed and at which level.</description>
    </item>
    
    <item>
      <title>Create an AKS Cluster</title>
      <link>https://jfrogtraining.github.io/azure-aks-workshop/4_workshop_setup/41_azure_setup/416_create_cluster.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/azure-aks-workshop/4_workshop_setup/41_azure_setup/416_create_cluster.html</guid>
      <description>Before creating an AKS cluster for our application, we must first set up the required networking with the following steps.
 Now we are ready to create an AKS cluster. In your Azure Cloud Shell, let&amp;rsquo;s get the latest version of Kubernetes that is available with the following command.  VERSION=$(az aks get-versions \ --location $REGION \ --query &#39;orchestrators[?!isPreview] | [-1].orchestratorVersion&#39; \ --output tsv) echo $VERSION Let&amp;rsquo;s create an environment variable for the cluster name.</description>
    </item>
    
    <item>
      <title>Get the Workshop Code</title>
      <link>https://jfrogtraining.github.io/azure-aks-workshop/4_workshop_setup/41_azure_setup/417_workshop_code.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/azure-aks-workshop/4_workshop_setup/41_azure_setup/417_workshop_code.html</guid>
      <description>The workshop code is located at https://github.com/jfrogtraining/azure-aks-workshop GitHub repository. We will fork and clone this repository in order to pull the required workshop files and scripts.
 Go to https://github.com/jfrogtraining/azure-aks-workshop and fork this repository to your GitHub account.  Clone the repo. You can do this locally in the Azure Cloud Shell. You can open another Azure Cloud Shell session.  git clone https://github.com/&amp;lt;your user name&amp;gt;/azure-aks-workshop.git
You can use the Azure Cloud Shell editor to explore the code.</description>
    </item>
    
    <item>
      <title>Get a Free JFrog Platform Instance</title>
      <link>https://jfrogtraining.github.io/azure-aks-workshop/4_workshop_setup/42_jfrog_setup/421_jfrog_free.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/azure-aks-workshop/4_workshop_setup/42_jfrog_setup/421_jfrog_free.html</guid>
      <description>If you do not have access to a JFrog Platform instance, use the JFrog Platform Cloud Free Tier to get your own JFrog Platform instance with Artifactory, Xray and Pipelines.
When signing up for the JFrog Platform Cloud Free Tier, ensure that you select Azure and the region for your resource group.
  JFrog Platform Cloud Free Tier   </description>
    </item>
    
    <item>
      <title>Activate JFrog Pipelines CI/CD</title>
      <link>https://jfrogtraining.github.io/azure-aks-workshop/4_workshop_setup/42_jfrog_setup/422_jfrog_pipelines.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/azure-aks-workshop/4_workshop_setup/42_jfrog_setup/422_jfrog_pipelines.html</guid>
      <description>Go to your JFrog Platform instance at https://[server name].jfrog.io. Refer to your JFrog Free Subscription Activation email if needed. Substitute your server name.   Login to your JFrog Platform instance with your credentials.   Once logged into your JFrog Platform instance, you will be presented with the landing page.   Go to Application &amp;gt; Pipelines and follow the instructions to activate JFrog Pipelines. This will take a few minutes.</description>
    </item>
    
    <item>
      <title>Set Up Docker Repositories</title>
      <link>https://jfrogtraining.github.io/azure-aks-workshop/4_workshop_setup/42_jfrog_setup/423_docker_repositories.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/azure-aks-workshop/4_workshop_setup/42_jfrog_setup/423_docker_repositories.html</guid>
      <description>In your JFrog Platform instance at the top right, enable the drop down menu and select Quick Setup.  On the Create Repositories dialog, choose Docker and click Next.   Next, enter workshop for the Repositories Prefix.
  Click Create. This will create the following docker repositories:
   workshop-docker-local workshop-docker-remote workshop-docker   Local repositories are physical, locally-managed repositories into which you can deploy artifacts. These are repositories that are local to the JFrog Artifactory instance.</description>
    </item>
    
    <item>
      <title>Set Up Xray Security</title>
      <link>https://jfrogtraining.github.io/azure-aks-workshop/4_workshop_setup/42_jfrog_setup/424_xray_setup.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/azure-aks-workshop/4_workshop_setup/42_jfrog_setup/424_xray_setup.html</guid>
      <description>In your JFrog Platform instance, go to Administration &amp;gt; Xray &amp;gt; Watches &amp;amp; Policies.   Click Create a Policy.
  Call the security policy, High-Severity.
   Click on New Rule.
  Name the rule High-Severity and select High for the Minimal Severity. Click Save.
   Click Create to create this new security policy.
  Click on the Watches tab under Watches &amp;amp; Policies.</description>
    </item>
    
    <item>
      <title>Cleanup</title>
      <link>https://jfrogtraining.github.io/azure-aks-workshop/cleanup.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/azure-aks-workshop/cleanup.html</guid>
      <description>Your JFrog Platform Instance - The JFrog Platform instance that you used in this workshop will automatically be destroyed after the workshop. There isn&amp;rsquo;t anything you need to do. If you would like keep it, you can upgrade to one of the premium plans. Do this by clicking on the Upgrade button.   Azure Resources
 View your Azure Resource Groups here. Click on the jfrog-azure-workshop resource group.</description>
    </item>
    
    <item>
      <title>Resources</title>
      <link>https://jfrogtraining.github.io/azure-aks-workshop/resources.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/azure-aks-workshop/resources.html</guid>
      <description>JFrog Platform Documentation - The full documentation of the JFrog Platform, the universal, hybrid, end-to-end DevOps automation solution. It is designed to take you through all the JFrog Products. Including user, administration and developer guides, installation and upgrade procedures, system architecture and configuration, and working with the JFrog application. JFrog Academy - Learn more about the JFrog Platform at your own pace with JFrog Academy free courses taught by our experts.</description>
    </item>
    
  </channel>
</rss>
